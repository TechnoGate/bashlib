#!/usr/bin/env bash
#
# vim:ft=sh:fenc=UTF-8:ts=4:sts=4:sw=4:expandtab:foldmethod=marker:foldlevel=0:
#
# Version: @VERSION@

# Load the functions.#{{{
# Determine the location of the functions file and source it.
if [ -f "@BASHLIBDIR@/functions/common" ]; then
    source "@BASHLIBDIR@/functions/common" 
else
    echo "$0: The required functions file could not be found, Aborting..."
    exit 54
fi
#}}}
# interrupt()#{{{
##
# The function interrupt will be used if the user pressed Ctrl+C
# You can easly do custom stuff by redefining this function
##
function interrupt()
{
    free_lock
    exit 130
}
#}}}
# die()#{{{
function die()
{
    local remove_lock=true
    if [ "${1}" = "-k" ]; then
        remove_lock=false
        shift
    fi
    print_error 0 "${@}"
    if isTrue "${remove_lock}"; then
        free_lock
    fi
    exit 1
}
#}}}
# lock_file()#{{{
function lock_file()
{
    [[ -z "${LOCK}" ]] && return 1
    if [ -f "${LOCK}" ]; then
        die -k "The lock file '${LOCK}' exists, please delete it if you wish to run the script."
    else
        touch "${LOCK}" || die "Couldn't create the lock file."
    fi
}
#}}}
# free_lock()#{{{
function free_lock()
{
    [[ -z "${LOCK}" ]] && return 1
    rm -f -- "${LOCK}"
}
#}}}
# help()#{{{
function help()
{
    print_info 0 "This script does not have a 'help' function."
    QuitScript
}
#}}}
# QuitScript()#{{{
function QuitScript()
{
    if [ -n "${1}" ] && isNumber "${1}"; then
        free_lock
        exit "${1}"
    fi

    # Exit code not given, ok let's try checking QuitScriptCode
    if [ -n "${QuitScriptCode}" ] && isNumber "${QuitScriptCode}"; then
        free_lock
        exit "${QuitScriptCode}"
    fi

    # Ok just quit 
    free_lock
    exit 0
}
#}}}
# Using trap#{{{
trap interrupt 2 15
#}}}
# Arguments#{{{
ARGS=( ${@} )
#}}}
# We have to parse Options if ParseOptions is true#{{{
# TODO
#}}}

# End Of File
# vim: set ft=sh ts=4 sts=4 sw=4 expandtab:
